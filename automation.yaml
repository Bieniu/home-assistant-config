#### NOTIFICATIONS ####
# powiadomienie o dostępnej aktualizacji
- alias: 'Notification Update Available'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.html5
    data_template: 
      title: 'Nowa wersja Home Assistante'
      message: "Dostępna jest aktualizacja do wersji {{ states.updater.updater.state }} dla Home Assistant."
    data:
      data:
        tag: 'notification-hass-update'
        url: "{{ states.updater.updater.attributes.release_notes }}"

# powiadomienie o dostępnej aktualizacji dla routera
- alias: 'Notification Router Update Available'
  trigger:
    platform: state
    entity_id: sensor.router_update
  action:
    service: notify.html5
    data_template: 
      title: 'Nowa wersja oprogramowania routera'
      message: "Dostępna jest aktualizacja oprogramowania routera do wersji {{ states.sensor.router_update.state }}."
    data:
      data:
        tag: 'notification-router-update'
        url: "https://asuswrt.lostrealm.ca/changelog"

# powiadomienia o małej ilości miejsca na Synology
- alias: 'Notification Low Disk Space On Synology'
  trigger:
    platform: numeric_state
    entity_id: sensor.synology_disk_used
    above: 70
  action:
    service: notify.html5
    data_template: 
      title: 'Mało miejsca na sysku Synology'
      message: "Dysk Synology jest zajęty w {{ states.sensor.synology_disk_used.state }}%."
    data:
      data:
        tag: 'notification-synology-low-disk'
        url: !secret synology_http

# powiadomienie o wykryciu nowego urządzenia
- alias: 'Notification New Device'
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    service: notify.html5
    data_template:
      title: 'Nowe urządzenie'
      message: "Wykryto nowe urządzenie o nazwie {{trigger.event.data.host_name}} ({{trigger.event.data.entity_id}})."
    data:
      data:
        tag: 'notification-new-device'

# powiadomieniu o zmianie statusu ważnych urządzeń na offline
- alias: 'Notification Device Offline'
  trigger:
    platform: state
    entity_id:
      - sensor.router_status
      - sensor.modem_status
      - sensor.switch_status
      - sensor.migateway_status
      - sensor.synology_status
      - sensor.denon_status
    from: 'online'
    to: 'offline'
  action:
    service: notify.html5
    data_template:
      title: 'Urządzenie offline'
      message: "{{ trigger.to_state.attributes.friendly_name }} jest {{ trigger.to_state.state }}."
    data:
      data:
        tag: 'notification-device-offline'

# niski poziom baterii
- alias: 'Notification Low Battery'
  trigger:
    platform: time
    after: '18:00:00'
  condition:
    condition: template
    value_template: >-
       {% for entity_id in states.group.batteries.attributes.entity_id if states(entity_id) | int < 15 %}
       {%- if loop.first -%}
       {{ true }}
       {%- endif -%}
       {% endfor %}
  action:
    service: notify.html5
    data_template:
      title: 'Niski poziom naładowania baterii'
      message: "Wykryto niski poziom naładowania baterii w przynajmniej jednym urządzeniu."
    data:
      data:
        tag: 'notification-low-battery'

#### PRESENCE ####
# Edyta 40 minut od domu
- alias: 'Presence Edyta Far From Home'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.edyta_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state | int > 40) }}"
  condition:
    condition: state
    entity_id: input_boolean.edyta_far_from_home
    state: 'off'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.edyta_far_from_home

# Maciek 40 minut od domu
- alias: 'Presence Maciek Far From Home'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.maciek_to_home.state | int > 40) }}"
  condition:
    condition: state
    entity_id: input_boolean.maciek_far_from_home
    state: 'off'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.maciek_far_from_home

# Maciek wrócił do domu
- alias: 'Presence Maciek Come Back Home'
  trigger:
    platform: state
    entity_id: sensor.maciek_presence
    from: 'not_home'
    to: 'home'
  condition:
    condition: state
    entity_id: input_boolean.maciek_far_from_home
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.maciek_far_from_home

# Edyta wróciła do domu
- alias: 'Presence Edyta Come Back Home'
  trigger:
    platform: state
    entity_id: sensor.edyta_presence
    from: 'not_home'
    to: 'home'
  condition:
    condition: state
    entity_id: input_boolean.edyta_far_from_home
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.edyta_far_from_home

# domownicy poza domem
- alias: 'Presence Peoples Away'
  trigger:
    platform: state
    entity_id: group.peoples
    from: 'home'
    to: 'not_home'
    for:
      minutes: 20
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.away_mode

# domownicy w domu
- alias: 'Presence Peoples Back'
  trigger:
    platform: state
    entity_id: group.peoples
    to: 'home'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.away_mode

#### HEATING ####
# zwiększenie temperatury rano w tygodniu jeśli ktoś jest w domu i trwa sezon grzewczy
- alias: 'Heating Day'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_end.state }}'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'home'
  action:
    - service: climate.set_temperature
      entity_id: climate.antresola_thermostat_heating_1_2_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_day.state }}'
    - service: climate.set_temperature
      entity_id: climate.salon_thermostat_heating_1_7_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_day.state }}'
    - service: climate.set_temperature
      entity_id: climate.antek_thermostat_heating_1_3_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_bedroom_day.state }}'
    - service: climate.set_temperature
      entity_id: climate.sypialnia_thermostat_heating_1_4_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_bedroom_day.state }}'

# zmniejszenie temperatury na noc w tygodniu jeśli trwa sezon grzewczy
- alias: 'Heating Night'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_start.state }}'
      - condition: time
        weekday:
          - sun
          - mon
          - tue
          - wed
          - thu
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.party_mode
        state: 'off'
  action:
    - service: climate.set_temperature
      entity_id: climate.antresola_thermostat_heating_1_2_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_night.state }}'
    - service: climate.set_temperature
      entity_id: climate.antek_thermostat_heating_1_3_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_bedroom_night.state }}'
    - service: climate.set_temperature
      entity_id: climate.sypialnia_thermostat_heating_1_4_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_bedroom_night.state }}'
    - condition: state
      entity_id: group.guests
      state: 'not_home'
    - service: climate.set_temperature
      entity_id: climate.salon_thermostat_heating_1_7_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_night.state }}'

# zwiększenie temperatury rano w weekendy jeśli ktoś jest w domu i trwa sezon grzewczy
- alias: 'Heating Day Weekend'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_end_weekend.state }}'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'home'
  action:
    service: automation.trigger
    entity_id: automation.heating_day

# zmniejszenie temperatury na noc w weekendy jeśli trwa sezon grzewczy
- alias: 'Heating Night Weekend'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_start_weekend.state }}'
      - condition: time
        weekday:
          - fri
          - sat
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.party_mode
        state: 'off'
  action:
    service: automation.trigger
    entity_id: automation.heating_night

# zmniejszenie temperatury na noc po imprezie
- alias: 'Heating Night After Party'
  trigger:
    platform: state
    entity_id: media_player.denon
    state: 'off'
  condition:
    condition: state
    entity_id: input_boolean.party_mode
    state: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.party_mode
    - condition: state
      entity_id: input_boolean.heating_season
      state: 'on'
    - delay: 0:15
    - service: automation.trigger
      entity_id: automation.heating_night

# zmniejszenie temperatury gdy domownicy wychodzą i jest sezon grzewczy
- alias: 'Heating Eco Mode'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.heating_season
    state: 'on'
  action:
    - service: climate.set_temperature
      entity_id: climate.antresola_thermostat_heating_1_2_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_eco.state }}'
    - service: climate.set_temperature
      entity_id: climate.salon_thermostat_heating_1_7_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_eco.state }}'
    - service: climate.set_temperature
      entity_id: climate.antek_thermostat_heating_1_3_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_eco.state }}'
    - service: climate.set_temperature
      entity_id: climate.sypialnia_thermostat_heating_1_4_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_eco.state }}'
    - service: input_boolean.turn_off
      entity_id: input_boolean.heating_airing

# zwiększenie temperatury gdy domownicy wracają i jest sezon grzewczy
- alias: 'Heating Peoples Back'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '22:00:00'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: automation.trigger
    entity_id: automation.heating_day

- alias: 'Heating Peoples Back Night'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '22:00:00'
        before: '05:30:00'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: automation.trigger
    entity_id: automation.heating_night

# włączenie ogrzewania 30 minut przed powrotem do domu w dzień gdy jest sezon grzewczy
- alias: 'Heating Turn On Before Return To Home'
  trigger:
    platform: template
    value_template: "{{ ((states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state != 'unknown')) and ((states.sensor.maciek_to_home.state | int < 30) or (states.sensor.edyta_to_home.state | int < 30)) }}"
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '23:00:00'
      - condition: state
        entity_id: group.peoples
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.edyta_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.maciek_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'on'
  action:
    - service: automation.trigger
      entity_id: automation.heating_day
    - service: input_boolean.turn_off
      entity_id: input_boolean.edyta_far_from_home
    - service: input_boolean.turn_off
      entity_id: input_boolean.maciek_far_from_home

# początek przewietrzania
- alias: 'Heating Airing Begin'
  trigger:
    platform: state
    entity_id: input_boolean.heating_airing
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.heating_season
    state: 'on'
  action:
    - service: climate.set_temperature
      entity_id: climate.antresola_thermostat_heating_1_2_1
      data:
        temperature: 8
    - service: climate.set_temperature
      entity_id: climate.salon_thermostat_heating_1_7_1
      data:
        temperature: 8
    - service: climate.set_temperature
      entity_id: climate.antek_thermostat_heating_1_3_1
      data:
        temperature: 8
    - service: climate.set_temperature
      entity_id: climate.sypialnia_thermostat_heating_1_4_1
      data:
        temperature: 8

# koniec przewietrzania
- alias: 'Heating Airing End'
  trigger:
    platform: state
    entity_id: input_boolean.heating_airing
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: automation.trigger
    entity_id: automation.heating_day

# koniec przewietrzania o zachodzie słońca
- alias: 'Heating Airing End At Sunset'
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_airing
        state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.heating_airing

# początek sezonu grzewczego
- alias: 'Heating Season Begin'
  trigger:
    platform: state
    entity_id: input_boolean.heating_season
    from: 'off'
    to: 'on'
  action:
    service: automation.trigger
    entity_id: automation.heating_day

# koniec sezonu grzewczego
- alias: 'Heating Season End'
  trigger:
    platform: state
    entity_id: input_boolean.heating_season
    from: 'on'
    to: 'off'
  action:
    - service: climate.set_temperature
      entity_id: climate.antresola_thermostat_heating_1_2_1
      data:
        temperature: 4
    - service: climate.set_temperature
      entity_id: climate.salon_thermostat_heating_1_7_1
      data:
        temperature: 4
    - service: climate.set_temperature
      entity_id: climate.kuchnia_thermostat_heating_1_5_1
      data:
        temperature: 4
    - service: climate.set_temperature
      entity_id: climate.antek_thermostat_heating_1_3_1
      data:
        temperature: 4
    - service: climate.set_temperature
      entity_id: climate.sypialnia_thermostat_heating_1_4_1
      data:
        temperature: 4

# ustawia w kuchni temperaturę z salonu
- alias: 'Heating Salon Thermostat SetPoint Change'
  trigger:
    platform: state
    entity_id: climate.salon_thermostat_heating_1_7_1
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
           {% if (trigger.to_state and trigger.from_state) %}
              {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: >-
           {% if (trigger.to_state and states.climate.kuchnia_thermostat_heating_1_5_1) %}
              {{ trigger.to_state.attributes.temperature != states.climate.kuchnia_thermostat_heating_1_5_1.attributes.temperature }}
           {% endif %}
  action:
    service: climate.set_temperature
    entity_id: climate.kuchnia_thermostat_heating_1_5_1
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'

# ustawia w salonie temperaturę z kuchni
- alias: 'Heating Kuchnia Thermostat SetPoint Change'
  trigger:
    platform: state
    entity_id: climate.kuchnia_thermostat_heating_1_5_1
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
           {% if (trigger.to_state and trigger.from_state) %}
              {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: >-
           {% if (trigger.to_state and states.climate.salon_thermostat_heating_1_7_1) %}
              {{ trigger.to_state.attributes.temperature != states.climate.salon_thermostat_heating_1_7_1.attributes.temperature }}
           {% endif %}
  action:
    service: climate.set_temperature
    entity_id: climate.salon_thermostat_heating_1_7_1
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'

#### LIGHT ####
# włączenie trybu disco oświetlenia
- alias: 'Light Disco Mode'
  trigger: 
    platform: time
    seconds: '/5'
  condition: 
    condition: state
    entity_id: input_boolean.disco_mode
    state: 'on'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.light_scenes_salon
        option: ''
    - service: light.turn_on
      entity_id: light.gateway_light_f0b429cc6f0b
      data_template:
        brightness: 60
        rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']
    - condition: state
      entity_id: group.bulbs_salon
      state: 'on'
    - service: light.turn_on
      entity_id: light.yeelight_color_bulb_salon_1
      data_template:
        transition: 4
        brightness: 60
        rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']
    - service: light.turn_on
      entity_id: light.yeelight_color_bulb_salon_2
      data_template:
        transition: 4
        brightness: 60
        rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']

# wyłączenie trybu disco oświetlenia
- alias: 'Light Disco Mode End'
  trigger: 
    platform: state
    entity_id: input_boolean.disco_mode
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_off
      entity_id: light.gateway_light_f0b429cc6f0b
    - condition: state
      entity_id: group.bulbs_salon
      state: 'on'
    - service: input_select.select_option
      data:
        entity_id: input_select.light_scenes_salon
        option: 'standard'

# standardowa scena oświetlenia w salonie przed zachodem słońca
- alias: 'Light Scene Standard Before Sunset'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
    to: 'standard'
  condition:
    condition: and
    conditions:
      - condition: sun
        before: sunset
      - condition: state
        entity_id: group.bulbs_salon
        state: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.standard_przed_zachodem

# standardowa scena oświetlenia w salonie po zachodzie słońca
- alias: 'Light Scene Standard After Sunset'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
    to: 'standard'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
      - condition: state
        entity_id: group.bulbs_salon
        state: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.standard_po_zachodzie

# zmiana temperatury koloru światła o zachodzie słońca
- alias: 'Light Change Color Temp At Sunset'
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.bulbs_salon
        state: 'on'
      - condition: state
        entity_id: input_select.light_scenes_salon
        state: 'standard'
  action:
    service: scene.turn_on
    entity_id: scene.standard_po_zachodzie

# wybór sceny oświetlenia w salonie
- alias: 'Light Scene Salon'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ (trigger.to_state.state != '') and (trigger.to_state.state != 'standard') }}"
      - condition: state
        entity_id: group.bulbs_salon
        state: 'on'
  action:
    service: scene.turn_on
    data_template:
      entity_id: scene.{{ trigger.to_state.state }}

# scena standardowa po włączeniu żarówek
- alias: 'Light Set Standard Scene At Turning On Salon Bulbs'
  trigger:
    platform: state
    entity_id: group.bulbs_salon
    state: 'on'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.light_scenes_salon
      option: 'standard'

# scena '' po wyłączeniu żarówek lub wyłączeniu trybu disco
- alias: 'Light Set Salon Empty Scene'
  trigger:
    - platform: state
      entity_id: group.bulbs_salon
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.disco_mode
      from: 'off'
      to: 'on'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.light_scenes_salon
      option: ''

# włączenie lampki na antresoli po wyłączeniu światła w salonie wieczorem
- alias: 'Light Turn On Antresola Lamp After Turn Off Salon Bulbs'
  trigger:
    platform: state
    entity_id: group.bulbs_salon
    from: 'on'
    to: 'off'
  condition:
    condition: sun
    after: sunset
    after_offset: '02:00:00'
  action:
    service: script.turn_on
    entity_id: script.light_antresola_on

# automatyczna zmiana temperatury koloru żarówek gdy wybrana scena standard
- alias: 'Light Salon Bulbs Auto Color Temp'
  trigger:
    platform: time
    minutes: '/6'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
      - condition: state
        entity_id: group.bulbs_salon
        state: 'on'
      - condition: state
        entity_id: light.yeelight_color_bulb_salon_1
        state: 'on'
      - condition: state
        entity_id: input_select.light_scenes_salon
        state: 'standard'
      - condition: template
        value_template: '{{ (states.light.yeelight_color_bulb_salon_1.attributes.color_temp | int <= 340) }}'
  action:
    service: homeassistant.turn_on
    entity_id: group.bulbs_salon
    data_template:
      transition: 5
      brightness: 255
      color_temp: '{{ states.light.yeelight_color_bulb_salon_1.attributes.color_temp | int + 2 }}'

#### OTHERS ####
- alias: 'Log Level'
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"
