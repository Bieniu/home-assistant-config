#### GAMES ####
# początek grania
- id: start_games
  alias: 'Start Games'
  trigger:
    platform: state
    entity_id: binary_sensor.gaming
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.gaming_timer
    state: 'off'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.gaming_timer
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.gaming_end_hours
        value: '{{ (now().strftime("%s") | int | timestamp_custom("%H")) | int + 1 }}'
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.gaming_end_minutes
        value: '{{ now().strftime("%s") | int | timestamp_custom("%M") }}'

# koniec grania
- id: end_games
  alias: 'End Games'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ ((now().strftime("%s") | int | timestamp_custom("%H")) | int) == (states.input_slider.gaming_end_hours.state | int)}}'
      - condition: template
        value_template: '{{ ((now().strftime("%s") | int | timestamp_custom("%M")) | int) == (states.input_slider.gaming_end_minutes.state | int) }}'
      - condition: state
        entity_id: input_boolean.gaming_timer
        state: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.gaming_timer
    - condition: state
      entity_id: binary_sensor.gaming
      state: 'on'
    - service: notify.html5_oneplus
      data_template: 
        title: 'Zbyt długa gra'
        message: 'Gra trwa już godzinę. Pora skończyć!'
      data:
        data:
          tag: 'notification-gaming-end'
    - service: notify.ios_edyta_iphone
      data:
        title: 'Zbyt długa gra'
        message: 'Gra trwa już godzinę. Pora skończyć!'
    - service: notify.androidtv
      data:
        title: 'Zbyt długa gra'
        message: 'Gra trwa już godzinę. Pora skończyć!'

#### ENERGY CONSUMPTION ####
# resetowanie miesięcznego zużycia energii
- id: energy_reset_monthly_consumption
  alias: 'Energy Reset Monthly Consumption'
  trigger:
    platform: time
    hours: 0
    minutes: 0
    seconds: 0
  condition:
    condition: template
    value_template: "{{ now().date().day == 1 }}"
  action:
    - service: zwave.reset_node_meters
      data: {"node_id":13,"instance":1}
    - service: zwave.reset_node_meters
      data: {"node_id":13,"instance":2}

#### NOTIFICATIONS ####
# powiadomienie o wygasającym certyfikacie SSL
- id: notification_ssl_cert_expiry
  alias: 'Notification SSL Cert Expiry'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.ssl_certificate_expiry.state | int == 30) or (states.sensor.ssl_certificate_expiry.state | int == 20) or (states.sensor.ssl_certificate_expiry.state | int == 10) }}"
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Wygasa certyfikat SSL'
      message: "Za {{ states.sensor.ssl_certificate_expiry.state }} dni wygaśnie certyfikat SSL serwera WWW."
    data:
      data:
        tag: 'notification-ssl-cert'

# powiadomienie o błędzie inicjalizacji Z-Wave
- id: notification_zwave_error
  alias: 'Notification Z-Wave Error'
  trigger:
    platform: state
    entity_id: zwave.__1
    to: 'Dead (Probe)'
  action:
    service: notify.html5
    data_template:
      title: 'Błąd inicjalizacji Z-Wave'
      message: "Prawdopodobnie wystąpił błąd inicjalizacji Z-Wave. Wymagany restart Home Assistant."
    data:
      data:
        tag: 'notification-zwave-error'

# powiadomienie o dostępnej aktualizacji HA
- id: notification_update_available
  alias: 'Notification Update Available'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Aktualizacja Home Assistant'
      message: "Dostępna jest aktualizacja do wersji {{ trigger.to_state.state }} dla Home Assistant."
    data:
      data:
        tag: 'notification-hass-update'
        url: "https://home-assistant.io/blog/"

- id: notification_custom_update_available
  alias: 'Notification Custom Update Available'
  trigger:
    platform: template
    value_template: "{{ states.sensor.ha_version_current.state != states.sensor.ha_version_installed.state }}"
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Aktualizacja Home Assistant'
      message: "Dostępna jest aktualizacja do wersji {{ states.sensor.ha_version_current.state }} dla Home Assistant."
    data:
      data:
        tag: 'notification-hass-update'
        url: "https://home-assistant.io/blog/"

# powiadomienie jak jest ruch i nikogo w domu
- id: notification_motion_when_away_mode
  alias: 'Notification Motion When Away Mode'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_sensor_158d00014d0a27
        - binary_sensor.motion_sensor_158d000120a226
        - binary_sensor.motion_sensor_158d000121c604
        - binary_sensor.motion_sensor_158d000165ffb8
      from: 'off'
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.away_mode
    state: 'on'
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Wykryto ruch'
      message: "Mieszkanie jest puste i wykryto ruch w pomieszczeniu: {{ trigger.to_state.attributes.friendly_name }}"
    data:
      data:
        tag: 'notification-hass-motion'

# powiadomienie o dostępnej aktualizacji dla routera
- id: notification_router_update_available
  alias: 'Notification Router Update Available'
  trigger:
    platform: state
    entity_id: sensor.router_update
  action:
    service: notify.html5_oneplus
    data_template: 
      title: 'Nowa wersja oprogramowania routera'
      message: "Dostępna jest aktualizacja oprogramowania routera do wersji {{ trigger.to_state.state }}."
    data:
      data:
        tag: 'notification-router-update'
        url: "https://asuswrt.lostrealm.ca/changelog"

# powiadomienia o małej ilości miejsca na Synology
- id: notification_low_disk_space_on_synology
  alias: 'Notification Low Disk Space On Synology'
  trigger:
    platform: numeric_state
    entity_id: sensor.synology_disk_used
    above: 70
  action:
    service: notify.html5_oneplus
    data_template: 
      title: 'Mało miejsca na sysku Synology'
      message: "Dysk Synology jest zajęty w {{ trigger.to_state.state }}%."
    data:
      data:
        tag: 'notification-synology-low-disk'
        url: !secret synology_http

# powiadomienie o wykryciu nowego urządzenia
- id: notification_new_device
  alias: 'Notification New Device'
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Nowe urządzenie'
      message: "Wykryto nowe urządzenie o nazwie {{trigger.event.data.host_name}} ({{trigger.event.data.entity_id}})."
    data:
      data:
        tag: 'notification-new-device'

# powiadomieniu o zmianie statusu ważnych urządzeń na offline
- id: 'Notification Device Offline'
  alias: 'Notification Device Offline'
  trigger:
    platform: state
    entity_id:
      - sensor.router_status
      - sensor.modem_status
      - sensor.switch_status
      - sensor.migateway_status
      - sensor.synology_status
      - sensor.denon_status
      - sensor.sonoff_lamp_status
    from: 'online'
    to: 'offline'
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Urządzenie offline'
      message: "{{ trigger.to_state.attributes.friendly_name }} jest {{ trigger.to_state.state }}."
    data:
      data:
        tag: 'notification-device-offline'

# niski poziom baterii termostatów
- id: notification_low_battery_thermostats
  alias: 'Notification Low Battery Thermostats'
  trigger:
    platform: time
    at: '18:00:00'
  condition:
    condition: template
    value_template: >-
       {% for entity_id in states.group.batteries_thermostats.attributes.entity_id if states(entity_id) | int < 15 %}
       {%- if loop.first -%}
       {{ true }}
       {%- endif -%}
       {% endfor %}
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Niski poziom naładowania baterii w termostacie'
      message: "Wykryto niski poziom naładowania baterii w przynajmniej jednym termostacie."
    data:
      data:
        tag: 'notification-low-battery-thermostats'

# niski poziom baterii sensorów
- id: notification_low_battery_sensors
  alias: 'Notification Low Battery Sensors'
  trigger:
    platform: time
    at: '19:00:00'
  condition:
    condition: template
    value_template: >-
       {% for entity_id in states.group.batteries_sensors.attributes.entity_id if states(entity_id) | int < 15 %}
       {%- if loop.first -%}
       {{ true }}
       {%- endif -%}
       {% endfor %}
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Niski poziom naładowania baterii w sensorach'
      message: "Wykryto niski poziom naładowania baterii w przynajmniej jednym sensorze."
    data:
      data:
        tag: 'notification-low-battery-sensors'

#### PRESENCE ####
# Edyta 40 minut od domu
- id: presence_edyta_far_from_home
  alias: 'Presence Edyta Far From Home'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.edyta_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state | int > 40) }}"
  condition:
    condition: state
    entity_id: input_boolean.edyta_far_from_home
    state: 'off'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.edyta_far_from_home

# Maciek 40 minut od domu
- id: presence_maciek_far_from_home
  alias: 'Presence Maciek Far From Home'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.maciek_to_home.state | int > 40) }}"
  condition:
    condition: state
    entity_id: input_boolean.maciek_far_from_home
    state: 'off'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.maciek_far_from_home

# Maciek wrócił do domu
- id: presence_maciek_come_back_home
  alias: 'Presence Maciek Come Back Home'
  trigger:
    platform: state
    entity_id: sensor.maciek_presence
    to: 'home'
  condition:
    condition: state
    entity_id: input_boolean.maciek_far_from_home
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.maciek_far_from_home

# Edyta wróciła do domu
- id: presence_edyta_come_back_home
  alias: 'Presence Edyta Come Back Home'
  trigger:
    platform: state
    entity_id: sensor.edyta_presence
    to: 'home'
  condition:
    condition: state
    entity_id: input_boolean.edyta_far_from_home
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.edyta_far_from_home

# domownicy poza domem
- id: presence_peoples_away
  alias: 'Presence Peoples Away'
  trigger:
    platform: state
    entity_id: group.peoples
    from: 'home'
    to: 'not_home'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.away_mode

# domownicy w domu
- id: presence_peoples_back
  alias: 'Presence Peoples Back'
  trigger:
    platform: state
    entity_id: group.peoples
    from: 'not_home'
    to: 'home'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.away_mode

#### HEATING ####
# zwiększenie temperatury rano w tygodniu jeśli ktoś jest w domu i trwa sezon grzewczy
- id: heating_day
  alias: 'Heating Day'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_end.state }}'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'home'
  action:
    service: script.heating_day

# zmniejszenie temperatury na noc w tygodniu jeśli trwa sezon grzewczy
- id: heating_night
  alias: 'Heating Night'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_start.state }}'
      - condition: time
        weekday:
          - sun
          - mon
          - tue
          - wed
          - thu
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: script.heating_night

# zwiększenie temperatury rano w weekendy jeśli ktoś jest w domu i trwa sezon grzewczy
- id: heating_day_weekend
  alias: 'Heating Day Weekend'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_end_weekend.state }}'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'home'
  action:
    service: script.heating_day

# zmniejszenie temperatury na noc w weekendy jeśli trwa sezon grzewczy
- id: heating_night_weekend
  alias: 'Heating Night Weekend'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.input_select.heating_night_start_weekend.state }}'
      - condition: time
        weekday:
          - fri
          - sat
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: script.heating_night

# zmniejszenie temperatury na noc w salonie i kuchni po wyłączeniu TV
- id: heating_night_salon_and_kuchnia
  alias: 'Heating Night Salon and Kuchnia'
  trigger:
    platform: state
    entity_id: media_player.denon
    to: 'off'
  condition: 
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: group.guests
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.heating_night
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_salon_kuchnia_night
        state: 'off'
  action:
    - service: climate.set_temperature
      entity_id: climate.thermostat_kuchnia_heating_1
      data_template:
        temperature: '{{ states.input_select.heating_temp_night.state }}'

# zmniejszenie temperatury gdy domownicy wychodzą i jest sezon grzewczy
- id: heating_eco_mode
  alias: 'Heating Eco Mode'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'off'
    to: 'on'
    for:
      minutes: 20
  condition:
    condition: state
    entity_id: input_boolean.heating_season
    state: 'on'
  action:
    service: script.heating_eco_mode

# zwiększenie temperatury gdy domownicy wracają i jest sezon grzewczy
- id: heating_peoples_back
  alias: 'Heating Peoples Back'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '22:00:00'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: script.heating_day

- id: heating_peoples_back_night
  alias: 'Heating Peoples Back Night'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '22:00:00'
        before: '05:30:00'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: script.heating_night

# włączenie ogrzewania 30 minut przed powrotem do domu w dzień gdy jest sezon grzewczy
- id: heating_turn_on_before_return_to_home
  alias: 'Heating Turn On Before Return To Home'
  trigger:
    platform: template
    value_template: "{{ ((states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state != 'unknown')) and ((states.sensor.maciek_to_home.state | int < 30) or (states.sensor.edyta_to_home.state | int < 30)) }}"
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '23:00:00'
      - condition: state
        entity_id: group.peoples
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.edyta_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.maciek_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'on'
  action:
    - service: script.heating_day
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.edyta_far_from_home
        -  input_boolean.maciek_far_from_home

# początek przewietrzania
- id: heating_airing_begin
  alias: 'Heating Airing Begin'
  trigger:
    platform: state
    entity_id: input_boolean.heating_airing
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.heating_season
    state: 'on'
  action:
    service: script.heatin_airing_begin

# koniec przewietrzania
- id: heating_airing_end
  alias: 'Heating Airing End'
  trigger:
    platform: state
    entity_id: input_boolean.heating_airing
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: script.heating_day

# koniec przewietrzania o zachodzie słońca
- id: heating_airing_end_at_sunset
  alias: 'Heating Airing End At Sunset'
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_airing
        state: 'on'
  action:
    - service: notify.ios_edyta_iphone
      data:
        title: 'Koniec przewietrzania'
        message: 'O zachodzie słońca wyłączono tryb przewietrzania. Proszę zamknąć okna!'
    - service: notify.html5_oneplus
      data_template: 
        title: 'Koniec przewietrzania'
        message: 'O zachodzie słońca wyłączono tryb przewietrzania. Proszę zamknąć okna!'
      data:
        data:
          tag: 'notification-airing-sunset-end'
    - service: input_boolean.turn_off
      entity_id: input_boolean.heating_airing

# początek sezonu grzewczego
- id: heating_season_begin
  alias: 'Heating Season Begin'
  trigger:
    platform: state
    entity_id: input_boolean.heating_season
    from: 'off'
    to: 'on'
  action:
    service: script.heating_day

# koniec sezonu grzewczego
- id: heating_season_end
  alias: 'Heating Season End'
  trigger:
    platform: state
    entity_id: input_boolean.heating_season
    from: 'on'
    to: 'off'
  action:
    service: script.heating_season_end

# ustawia w kuchni temperaturę z salonu
- id: heating_sync_temp_salon_kuchnia
  alias: 'Heating Sync Temp Salon Kuchnia'
  trigger:
    platform: state
    entity_id: climate.thermostat_salon_heating_1
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
           {% if (trigger.to_state and trigger.from_state) %}
              {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: >-
           {% if (trigger.to_state and states.climate.thermostat_kuchnia_heating_1) %}
              {{ trigger.to_state.attributes.temperature != states.climate.thermostat_kuchnia_heating_1.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: "{{ (trigger.to_state.attributes.temperature | float) != 4.3 }}"
  action:
    service: climate.set_temperature
    entity_id: climate.thermostat_kuchnia_heating_1
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'

# ustawia w salonie temperaturę z kuchni
- id: heating_sync_temp_kuchnia_salon
  alias: 'Heating Sync Temp Kuchnia Salon'
  trigger:
    platform: state
    entity_id: climate.thermostat_kuchnia_heating_1
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
           {% if (trigger.to_state and trigger.from_state) %}
              {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: >-
           {% if (trigger.to_state and states.climate.thermostat_salon_heating_1) %}
              {{ trigger.to_state.attributes.temperature != states.climate.thermostat_salon_heating_1.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: "{{ (trigger.to_state.attributes.temperature | float) != 4.3 }}"
  action:
    service: climate.set_temperature
    entity_id: climate.thermostat_salon_heating_1
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'

# otwarcie okna
- id: heating_windows_opened
  alias: 'Heating Windows Opened'
  trigger:
    - platform: template
      value_template: "{{ (states.sensor.temperature_salon_delta.state | float > 0.3) and (states.binary_sensor.temperature_salon_down.state == 'on') }}"
    - platform: template
      value_template: "{{ (states.sensor.temperature_antresola_delta.state | float > 0.3) and (states.binary_sensor.temperature_antresola_down.state == 'on') }}"
    - platform: template
      value_template: "{{ (states.sensor.temperature_sypialnia_delta.state | float > 0.3) and (states.binary_sensor.temperature_sypialnia_down.state == 'on') }}"
    - platform: template
      value_template: "{{ (states.sensor.temperature_pokoj_antek_delta.state | float > 0.3) and (states.binary_sensor.temperature_pokoj_antek_down.state == 'on') }}"
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunrise
      - condition: sun
        before: sunset
      - condition: state
        entity_id: input_boolean.heating_night
        state: 'off'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_airing
        state: 'off'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    - service: notify.ios_edyta_iphone
      data:
        title: 'Otwarcie okien'
        message: 'Wykryto otwarcie okien przy włączonym ogrzewaniu. Przełączono ogrzewanie w tryb przewietrzania. Pamiętaj, że musisz ręcznie wyłączyć tryb przewietrzania po zamknięciu okien!'
    - service: notify.html5_oneplus
      data_template: 
        title: 'Otwarcie okien'
        message: 'Wykryto otwarcie okien przy włączonym ogrzewaniu. Przełączono ogrzewanie w tryb przewietrzania. Pamiętaj, że musisz ręcznie wyłączyć tryb przewietrzania po zamknięciu okien!'
      data:
        data:
          tag: 'notification-window-opened'
    - service: input_boolean.turn_on
      entity_id: input_boolean.heating_airing

#### LIGHT ####
# standardowa scena oświetlenia w salonie
- id: light_scene_salon_standard
  alias: 'Light Scene Salon Standard'
  trigger:
    - platform: state
      entity_id: input_select.light_scenes_salon
      to: 'standard'
    - platform: state
      entity_id: group.bulbs_salon
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.salon_light_scene_turn_on
        state: 'off'
  action:
    - delay: '00:00:15'
    - service: switch.flux_update
    - service: input_select.select_option
      data:
        entity_id: input_select.light_scenes_salon
        option: 'standard'

# wybór sceny oświetlenia w salonie gdy zarówki włączone
- id: light_scene_salon
  alias: 'Light Scene Salon'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'standard' }}"
      - condition: template
        value_template: "{{ (states.light.yeelight_color_bulb_salon_1.state == 'on') and (states.light.yeelight_color_bulb_salon_1.state == 'on') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: scene.{{ trigger.to_state.state }}

# wybór sceny oświetlenia w salonie gdy żarówki wyłączone
- id: light_scene_salon_when_bulbs_off
  alias: 'Light Scene Salon When Bulbs Off'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'standard' }}"
      - condition: template
        value_template: "{{ (states.group.bulbs_salon.state == 'off') or (states.group.bulbs_salon.state == 'unknown') }}"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.salon_light_scene_turn_on
    - service: switch.turn_on
      entity_id: switch.light_salon_switch_2

# wybór sceny standard oświetlenia w salonie gdy żarówki wyłączone
- id: light_scene_salon_standard_when_bulbs_off
  alias: 'Light Scene Salon Standard When Bulbs Off'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == 'standard' }}"
      - condition: template
        value_template: "{{ (states.group.bulbs_salon.state == 'off') or (states.group.bulbs_salon.state == 'unknown') }}"
  action:
    service: switch.turn_on
    entity_id: switch.light_salon_switch_2

# scena gdy żarówki połączą się z siecią
- id: light_scene_salon_when_bulbs_are_turning_on
  alias: 'Light Scene Salon When Bulbs Are Turning On'
  trigger:
    platform: template
    value_template: "{{ (states.light.yeelight_color_bulb_salon_1.state == 'on') and (states.light.yeelight_color_bulb_salon_2.state == 'on') }}"
  condition:
    condition: state
    entity_id: input_boolean.salon_light_scene_turn_on
    state: 'on'
  action:
    - service: scene.turn_on
      data_template:
        entity_id: scene.{{ states.input_select.light_scenes_salon.state }}
    - service: input_boolean.turn_off
      entity_id: input_boolean.salon_light_scene_turn_on

# włączenie/wyłączenie lampy w salonie
- id: light_toggle_power_salon_lamp
  alias: 'Light Toggle Power Salon Lamp'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d000154964c
        click_type: single
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00014a0911
        click_type: single
  action:
    service: switch.toggle
    entity_id: switch.light_lamp_salon

# włączenie/wyłączenie żarówek w salonie
- id: light_toggle_power_salon_bulbs
  alias: 'Light Toggle Power Salon Bulbs'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d000154964c
        click_type: double
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00014a0911
        click_type: double
  action:
    service: switch.toggle
    entity_id: switch.light_salon_switch_2

# włączenie/wyłączenie LEDów w salonie
- id: light_toggle_power_salon_leds
  alias: 'Light Toggle Power Salon LEDs'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d000154964c
        click_type: hold
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00014a0911
        click_type: hold
  action:
    service: switch.toggle
    entity_id: switch.light_salon_switch

# włączanie lampki na antresoli jak jest ciemno i jest ruch
- id: light_turn_on_antresola_lamp
  alias: 'Light Turn On Antresola Lamp'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d00014d0a27, binary_sensor.motion_sensor_158d000120a226
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: light.gateway_light_f0b429cc6f0b
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.illumination_f0b429cc6f0b
        below: 135
  action:
    - service: light.turn_on
      entity_id: light.gateway_light_f0b429cc6f0b
      data_template:
        brightness: 200
        rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']
    - service: input_boolean.turn_on
      entity_id: input_boolean.antresola_lamp_motion_on

# wyłączanie lampki na antresoli jak brak ruchu
- id: light_turn_off_antresola_lamp
  alias: 'Light Turn Off Antresola Lamp'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d00014d0a27, binary_sensor.motion_sensor_158d000120a226
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.antresola_lamp_motion_on
        state: 'on'
      - condition: state
        entity_id: binary_sensor.motion_sensor_158d00014d0a27
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_sensor_158d000120a226
        state: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - light.gateway_light_f0b429cc6f0b
        - input_boolean.antresola_lamp_motion_on

# włączanie lampy w salonie jak jest ruch
- id: light_turn_on_salon_lamp
  alias: 'Light Turn On Salon Lamp'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000121c604
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.illumination_f0b429cc6f0b
        below: 135
      - condition: state
        entity_id: switch.light_salon_switch
        state: 'off'
      - condition: state
        entity_id: switch.light_salon_switch_2
        state: 'off'
      - condition: state
        entity_id: switch.light_lamp_salon
        state: 'off'
      - condition: state
        entity_id: group.guests
        state: 'not_home'
      - condition: state
        entity_id: media_player.denon
        state: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id:
        - switch.light_lamp_salon
        - input_boolean.salon_lamp_motion_on

- id: light_turn_off_salon_lamp
  alias: 'Light Turn Off Salon Lamp'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000121c604
    from: 'on'
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.salon_lamp_motion_on
    state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - switch.light_lamp_salon
        - input_boolean.salon_lamp_motion_on

# automatyczna zmiana temperatury koloru żarówek gdy wybrana scena standard
- id: light_salon_bulbs_auto_color_temp
  alias: 'Light Salon Bulbs Auto Color Temp'
  trigger:
    platform: time
    minutes: '/10'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ (states.light.yeelight_color_bulb_salon_1.state == 'on') and (states.light.yeelight_color_bulb_salon_1.state == 'on') }}"
      - condition: state
        entity_id: input_select.light_scenes_salon
        state: 'standard'
  action:
    service: switch.flux_update

# wyłączenie oświetlenia w salonie po wyjściu z domu
- id: light_turn_off_when_away_mode
  alias: 'Light Turn Off When Away Mode'
  trigger: 
    platform: state
    entity_id: input_boolean.away_mode
    from: 'off'
    to: 'on'
    for:
      minutes: 10
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: switch.light_lamp_salon
        state: 'on'
      - condition: state
        entity_id: switch.light_salon_switch
        state: 'on'
      - condition: state
        entity_id: switch.light_salon_switch_2
        state: 'on'
      - condition: state
        entity_id: light.yeelight_lightstrip_sypialnia
        state: 'on'
      - condition: state
        entity_id: light.gateway_light_f0b429cc6f0b
        state: 'on'
  action:
    service: script.light_away_mode

# Scena oświetlenia salonu film po włączeniu Netflix/Showmax/Youtube/Dune
- id: light_scene_film
  alias: 'Light Scene Film'
  trigger:
    - platform: state
      entity_id: sensor.androidtv_activity
      to: 'Netflix'
    - platform: state
      entity_id: sensor.androidtv_activity
      to: 'ShowMax'
    - platform: state
      entity_id: sensor.androidtv_activity
      to: 'YouTube'
    - platform: state
      entity_id: sensor.dune_activity
      to: 'file_playback'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
      - condition: template
        value_template: "{{ (states.switch.light_salon_switch.state == 'on') or (states.switch.light_salon_switch_2.state == 'on') or (states.switch.light_lamp_salon.state == 'on') }}"
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.light_scenes_salon
      option: 'film'

# Scena oświetlenia salonu standard po wyłączeniu filmu
- id: light_scene_standard_after_film
  alias: 'Light Scene Standard After Film'
  trigger:
    - platform: state
      entity_id: sensor.androidtv_activity
      from: 'Netflix'
      to: 'Ekran główny'
      for:
        minutes: 2
    - platform: state
      entity_id: sensor.androidtv_activity
      from: 'ShowMax'
      to: 'Ekran główny'
      for:
        minutes: 2
    - platform: state
      entity_id: sensor.androidtv_activity
      from: 'YouTube'
      to: 'Ekran główny'
      for:
        minutes: 2
    - platform: state
      entity_id: sensor.dune_activity
      from: 'file_playback'
      to: 'navigator'
      for:
        seconds: 30
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
      - condition: template
        value_template: "{{ (states.switch.light_salon_switch.state == 'on') or (states.switch.light_salon_switch_2.state == 'on') or (states.switch.light_lamp_salon.state == 'on') }}"
      - condition: state
        entity_id: input_select.light_scenes_salon
        state: 'film'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.light_scenes_salon
      option: 'standard'

- id: light_bulbs_group_visible
  alias: 'Light Group Bulbs Visible'
  trigger:
    - platform: template
      value_template: "{{ (states.switch.light_salon_switch_2.state == 'on') and (states.light.yeelight_color_bulb_salon_1.state == 'on') and (states.light.yeelight_color_bulb_salon_2.state == 'on') }}"
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: switch.light_salon_switch_2
        state: 'on'
      - condition: state
        entity_id: light.yeelight_color_bulb_salon_1
        state: 'on'
      - condition: state
        entity_id: light.yeelight_color_bulb_salon_2
        state: 'on'
  action:
    service: group.set_visibility
    entity_id: group.bulbs_salon
    data:
      visible: true

- id: light_bulbs_group_hidden
  alias: 'Light Group Bulbs Hidden'
  trigger:
    - platform: state
      entity_id: switch.light_salon_switch_2
      to: 'off'
    - platform: homeassistant
      event: start
  condition:
    condition: state
    entity_id: switch.light_salon_switch_2
    state: 'off'
  action:
    service: group.set_visibility
    entity_id: group.bulbs_salon
    data:
      visible: false

# włączenie lampy w salonie gdy ciemno, ruch, wyłączony TV i wyłączy się żarówki i LEDy
- id: light_turn_on_salon_lamp_when_other_lights_turn_off
  alias: 'Light Turn On Salon Lamp When Other Lights Turn Off'
  trigger:
    - platform: state
      entity_id: switch.light_salon_switch
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: switch.light_salon_switch_2
      from: 'on'
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.illumination_f0b429cc6f0b
        below: 135
      - condition: state
        entity_id: switch.light_salon_switch
        state: 'off'
      - condition: state
        entity_id: switch.light_salon_switch_2
        state: 'off'
      - condition: state
        entity_id: switch.light_lamp_salon
        state: 'off'
      - condition: state
        entity_id: group.guests
        state: 'not_home'
      - condition: state
        entity_id: media_player.denon
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_sensor_158d000121c604
        state: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id:
        - switch.light_lamp_salon
        - input_boolean.salon_lamp_motion_on

# włączanie LEDów w sypialni jak jest ruch
- id: light_turn_on_sypialnia_leds
  alias: 'Light Turn On Sypialnia LEDs'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000165ffb8
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: light.yeelight_lightstrip_sypialnia
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.illumination_158d000165ffb8
        below: 8
  action:
    - service: light.turn_on
      entity_id: light.yeelight_lightstrip_sypialnia
      data:
        brightness: 200
        rgb_color: [233,96,255]
    - service: input_boolean.turn_on
      entity_id: input_boolean.sypialnia_lamp_motion_on

# wyłączanie LEDów w sypialni jak brak ruchu
- id: light_turn_off_sypialnia_leds
  alias: 'Light Turn Off Sypialnia LEDs'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000165ffb8
    from: 'on'
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.sypialnia_lamp_motion_on
    state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.yeelight_lightstrip_sypialnia
      data:
        brightness: 5
        transition: 10
    - delay: '00:00:12'
    - service: homeassistant.turn_off
      entity_id:
        - light.yeelight_lightstrip_sypialnia
        - input_boolean.sypialnia_lamp_motion_on

#### OTHERS ####
- id: log_level
  alias: 'Log Level'
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"
