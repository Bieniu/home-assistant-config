substitutions:
  device_name: "BlitzWolf BW-SHP6 [ECF9EA]"
  host_name: "blitzwolf-bw-shp6-ecf9ea"
  current_res: "0.00290"
  voltage_div: "940"
  max_power: "2300"

esphome:
  name: ${host_name}
  friendly_name: ${device_name}
  platform: ESP8266
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret local_domain
  ap:
    ssid: ${device_name}
    password: !secret esphome_password

captive_portal:

logger:

api:
  encryption:
    key: !secret encryption_key

ota:
  password: !secret esphome_password

web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  - platform: gpio
    id: device_button
    internal: true
    pin:
      number: GPIO13
    on_press:
      - switch.toggle: relay

output:
  - platform: gpio
    pin: GPIO00
    inverted: true
    id: led

switch:
  - platform: gpio
    pin: GPIO15
    id: relay
    icon: mdi:power-plug
    name: "Relay"
    restore_mode: ALWAYS_ON
    on_turn_on:
      - output.turn_on: led
    on_turn_off:
      - output.turn_off: led

button:
  - platform: restart
    name: "Restart"
    device_class: "restart"

status_led:
  pin:
    number: GPIO02
    inverted: true

sensor:
  - platform: uptime
    id: uptime_sensor
    internal: true

  - platform: template
    name: "Last restart"
    update_interval: 300s
    device_class: "timestamp"
    entity_category: "diagnostic"
    lambda: |-
      auto time = id(homeassistant_time).now();
      if (time.is_valid()) {
        return time.timestamp - id(uptime_sensor).state;
      } else {
        return {};
      }

  - platform: wifi_signal
    name: "WiFi signal"
    update_interval: 300s
    device_class: "signal_strength"
    entity_category: "diagnostic"

  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO05
    cf1_pin: GPIO14
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    power:
      name: "Power"
      unit_of_measurement: "W"
      device_class: "power"
      on_value_range:
        - above: ${max_power}
          then:
            - output.turn_off: led
            - switch.turn_off: relay
    energy:
      name: "Energy"
      unit_of_measurement: "Wh"
      device_class: "energy"
