substitutions:
  device_name: "Wemos Lolin32 [8CBF7C]"
  host_name: "wemos-lolin32-8cbf7c"

esphome:
  name: ${host_name}

esp32:
  board: lolin32
  framework:
    type: arduino

logger:

api:
  password: !secret esphome_password
  services:
    - service: calibrate
      then:
        - mhz19.calibrate_zero: mhz19_sensor

ota:
  password: !secret esphome_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret local_domain
  power_save_mode: high
  ap:
    ssid: ${device_name}
    password: !secret esphome_password

captive_portal:

web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

esp32_ble_tracker:

bluetooth_proxy:
  active: true

time:
  - platform: homeassistant
    id: homeassistant_time

button:
  - platform: restart
    name: "${device_name} Restart"
    device_class: "restart"

uart:
  rx_pin: GPIO21
  tx_pin: GPIO22
  baud_rate: 9600

sensor:
  - platform: mhz19
    id: mhz19_sensor
    co2:
      name: "MH-Z19B Carbon Dioxide"
      device_class: "carbon_dioxide"
    temperature:
      name: "MH-Z19B Temperature"
      accuracy_decimals: 1
      device_class: "temperature"
    automatic_baseline_calibration: false
    update_interval: 300s

  - platform: uptime
    id: uptime_sensor
    internal: true

  - platform: uptime
    name: "${device_name} Last restart"
    update_interval: 300s
    device_class: "timestamp"
    entity_category: "diagnostic"
    unit_of_measurement: ""
    filters:
      - lambda: |-
          auto time = id(homeassistant_time).now();
          if (time.is_valid()) {
            return time.timestamp - x;
          } else {
            return {};
          }

  - platform: wifi_signal
    name: "${device_name} WiFi signal"
    update_interval: 300s
    device_class: "signal_strength"
    entity_category: "diagnostic"
