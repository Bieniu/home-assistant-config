#### XIAOMI GATEWAY ALARM ####
xiaomi_alarm:
  sequence:
    service: xiaomi.play_ringtone
    data:
      ringtone_id: 2
      gw_mac: !secret migateway_mac
      ringtone_vol: 10

xiaomi_alarm_stop:
  sequence:
    service: xiaomi.stop_ringtone
    data:
      gw_mac: !secret migateway_mac

#### LIGHT ####
devices_away_mode:
  sequence:
    - service: homeassistant.turn_off
      entity_id:
        - light.bulbs_salon
        - light.leds_salon
        - light.lamp_salon
        - light.leds_przedpokoj
        - light.gateway_antresola
        - light.gateway_goscinny
        - light.lightstrip_sypialnia
        - light.lightstrip_antek
        - switch.cabinet_antek
        - switch.lamp_pracownia
        # - switch.lamp_goscinny
        - input_boolean.antek_lamp_night
        - switch.tree_antek
        # - switch.tree_sypialnia
        # - fan.pedestal_salon
        - light.ceiling_gabinet
        - light.ceiling_kuchnia
        - light.ceiling_lazienka
        - light.desk_lamp_antek

#### HEATING ####
heating_fast_warm_up:
  alias: "Szybkie dogrzanie"
  sequence:
    - condition: state
      entity_id: input_boolean.heating_season
      state: "on"
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antresola
        - climate.thermostat_gabinet
        - climate.thermostat_antek
        - climate.thermostat_sypialnia
        - climate.aeotec_thermostat_kuchnia
        - climate.thermostat_salon
        - climate.custom_thermostat_lazienka
      data:
        temperature: 24
    - delay: "01:00:00"
    - service: script.heating_day

heating_day:
  sequence:
    - service: climate.set_temperature
      entity_id: climate.custom_thermostat_lazienka
      data:
        temperature: "{{ states('input_select.heating_temp_bathroom_day') }}"
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antresola
        - climate.aeotec_thermostat_kuchnia
        - climate.thermostat_salon
        - climate.thermostat_gabinet
      data:
        temperature: "{{ states('input_select.heating_temp_day') }}"
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antek
        - climate.thermostat_sypialnia
      data:
        temperature: "{{ states('input_select.heating_temp_bedroom_day') }}"
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.heating_night
        - input_boolean.heating_salon_kuchnia_night
    - condition: template
      value_template: >-
        {{ states('sensor.humidity_salon') | float < states('input_select.target_humidity') | float
           and states('sensor.humidifier_water_level') | int > 5 }}
    - service: fan.turn_on
      entity_id: fan.humidifier_salon

heating_night:
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.heating_night
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antresola
        - climate.thermostat_gabinet
      data:
        temperature: "{{ states('input_select.heating_temp_night') }}"
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antek
        - climate.thermostat_sypialnia
      data:
        temperature: "{{ states('input_select.heating_temp_bedroom_night') }}"
    - service: climate.set_temperature
      entity_id: climate.custom_thermostat_lazienka
      data:
        temperature: "{{ states('input_select.heating_temp_bathroom_night') }}"
    - condition: template
      value_template: >-
        {{ is_state("input_boolean.guests", "off") and
           is_state("media_player.denon_salon", "off") }}
    - service: fan.turn_off
      entity_id: fan.humidifier_salon
    - service: climate.set_temperature
      entity_id:
        - climate.aeotec_thermostat_kuchnia
        - climate.thermostat_salon
      data:
        temperature: "{{ states('input_select.heating_temp_night') }}"
    - service: input_boolean.turn_on
      entity_id: input_boolean.heating_salon_kuchnia_night

heating_eco_mode:
  sequence:
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antresola
        - climate.thermostat_gabinet
        - climate.aeotec_thermostat_kuchnia
        - climate.thermostat_salon
        - climate.thermostat_antek
        - climate.thermostat_sypialnia
        - climate.custom_thermostat_lazienka
      data:
        temperature: "{{ states('input_select.heating_temp_eco') }}"
    - service: fan.turn_off
      entity_id: fan.humidifier_salon

heating_season_end:
  sequence:
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antresola
        - climate.thermostat_gabinet
        - climate.thermostat_salon
        - climate.thermostat_antek
        - climate.thermostat_sypialnia
        - climate.custom_thermostat_lazienka
      data:
        temperature: 4
    - service: climate.turn_off
      entity_id:
        - climate.aeotec_thermostat_kuchnia
        - climate.custom_thermostat_lazienka

heating_airing_begin:
  sequence:
    - service: climate.set_temperature
      entity_id:
        - climate.thermostat_antresola
        - climate.thermostat_gabinet
        - climate.thermostat_salon
        - climate.thermostat_antek
        - climate.thermostat_sypialnia
        - climate.custom_thermostat_lazienka
        - climate.aeotec_thermostat_kuchnia
        - climate.custom_thermostat_lazienka
      data:
        temperature: 8
    - service: fan.turn_off
      entity_id: fan.humidifier_salon
    - condition: state
      entity_id: input_boolean.heating_airing
      state: "off"
    - service: input_boolean.turn_on
      entity_id: input_boolean.heating_airing

harmony_playstation:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "PlayStation"

harmony_xbox:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "Xbox"

harmony_smart_tv:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "Smart TV"

harmony_fire_tv:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "Fire TV"

harmony_telewizja:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "Telewizja"

harmony_muzyka:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "Muzyka"

harmony_filmy:
  sequence:
    service: remote.turn_on
    entity_id: remote.salon
    data:
      activity: "Filmy"

harmony_tv_off:
  sequence:
    service: remote.turn_off
    entity_id: remote.salon

#### LIGHT ####
light_turn_off_antek_leds:
  sequence:
    - service: input_boolean.turn_off
      entity_id: input_boolean.antek_lamp_night
    - service: light.turn_off
      entity_id: light.lightstrip_antek
      data:
        transition: 10

light_turn_on_antek_leds:
  sequence:
    - service: light.turn_on
      entity_id: light.lightstrip_antek
      data:
        brightness: 150
        rgb_color:
          [
            "{{ (range(0, 255)|random) }}",
            "{{ (range(0, 255)|random) }}",
            "{{ (range(0, 255)|random) }}",
          ]

notify_motion:
  mode: queued
  sequence:
    - service: camera.snapshot
      entity_id: camera.salon
      data:
        filename: "/media/camera_snapshots/{{ datetime }}.jpg"
    - delay:
        seconds: 1
    - service: python_script.notify
      data:
        title: "{{ title }}"
        message: "{{ message }}"
        tag: "{{ tag }}"
        group: "ruch"
        priority: "high"
        image: >-
          {% if location == 'salon' or location == 'przedpokÃ³j' %}
            /media/local/camera_snapshots/{{ datetime }}.jpg
          {% else %}
            None
          {% endif %}
        services:
          - service: !secret maciek_notify_service
            type: "android"
          - service: !secret edyta_notify_service
            type: "ios"

camera_move:
  sequence:
    service: mqtt.publish
    data:
      topic: "camera/salon/motors/{{ orientation }}/set"
      payload: "{{ direction }}"

## ALEXA
alexa_toggle_qube:
  sequence:
    - service: remote.send_command
      entity_id: remote.salon
      data:
        device: "Kostka"
        command: "W\u0142\u0105cz/wy\u0142\u0105cz"

alexa_netflix:
  sequence:
    - service: remote.turn_on
      entity_id: remote.salon
      data:
        activity: "Smart TV"
    - delay:
        seconds: 2
    - service: remote.send_command
      entity_id: remote.salon
      data:
        device: "Telewizor"
        command: "Netflix"

alexa_goodnight:
  sequence:
    - service: homeassistant.turn_off
      entity_id:
        - remote.salon
        # - fan.pedestal_salon
        - fan.humidifier_salon
        - light.leds_salon
        - light.bulbs_salon
        - switch.cabinet_antek
        - light.desk_lamp_antek
        - light.ceiling_gabinet
        - light.ceiling_kuchnia
        - light.ceiling_lazienka

alexa_tts:
  sequence:
    service: notify.alexa_media_echo_plus
    data:
      message: "{{ message }}"
      data:
        type: "tts"

restart_esphome_devices:
  sequence:
    service: switch.turn_on
    entity_id:
      - switch.blitzwolf_bw_shp6_2ad05a_restart
      - switch.blitzwolf_bw_shp6_3766eb_restart
      - switch.blitzwolf_bw_shp6_ecf9ea_restart
      - switch.blitzwolf_bw_shp6_ed007d_restart
      - switch.sonoff_basic_067c81_restart
      - switch.sonoff_basic_5dfba8_restart
      - switch.sonoff_basic_a786cc_restart
      - switch.sonoff_s26_182475_restart
      - switch.wemos_d1_mini_1c91ea_restart

open_windows:
  sequence:
    service: notify.alexa_media_echo_show
    data:
      message: >-
        {% set ns = namespace(open_windows=[]) %}
          {% for entity in state_attr('group.windows', 'entity_id') %}
            {% if is_state(entity, 'on') %}
              {% set ns.open_windows = ns.open_windows + [ state_attr(entity, 'location') ] %}
            {% endif %}
          {% endfor %}
        {% set open_windows = ns.open_windows | unique | list %}
        {% if open_windows | count == 0 %}
          Wszystkie okna sÄ zamkniÄte.
        {% elif open_windows | count == 1 %}
          Okno jest otwarte w: {{ open_windows[0] }}.
        {% else %}
          Okna sÄ otwarte w:{% for window in open_windows | unique | list %}{% if loop.first %} {% elif not loop.last %}, {% else %} i {% endif %}{{ window }}{% endfor %}.
        {% endif %}
      data:
        type: tts