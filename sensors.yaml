- platform: integration
  source: sensor.light_salon_power_sum
  name: 'Light Salon Energy'
  unit_prefix: k
  round: 2

- platform: integration
  source: sensor.dishwasher_kuchnia_power
  name: 'Dishwasher Kuchnia Energy'
  unit_prefix: k
  round: 2

- platform: rest
  name: 'Tasmota Version Current'
  resource: 'https://api.github.com/repos/arendst/Sonoff-Tasmota/releases/latest'
  value_template: "{{ value_json.tag_name | replace('v', '') }}"
  username: !secret github_username
  password: !secret github_token_access
  authentication: basic
  scan_interval: 7200
  headers:
    Accept: application/vnd.github.v3+json
    Content-Type: application/json
    User-Agent: Home Assistant REST sensor

- platform: rest
  name: 'Caddy Version Current'
  resource: 'https://api.github.com/repos/mholt/caddy/releases/latest'
  value_template: "{{ value_json.tag_name | replace('v', '') }}"
  username: !secret github_username
  password: !secret github_token_access
  authentication: basic
  scan_interval: 7200
  headers:
    Accept: application/vnd.github.v3+json
    Content-Type: application/json
    User-Agent: Home Assistant REST sensor

- platform: rest
  resource: !secret shelly1_url
  name: 'Shelly1 Firmware Version Current'
  value_template: "{{ (value_json['update'].new_version).split('/')[1].split('@')[0] | replace('v', '') }}"
  authentication: basic
  username: !secret shellies_username
  password: !secret shellies_password
  scan_interval: 7200

- platform: rest
  resource: !secret shelly2_url
  name: 'Shelly2 Firmware Version Current'
  value_template: "{{ (value_json['update'].new_version).split('/')[1].split('@')[0] | replace('v', '') }}"
  authentication: basic
  username: !secret shellies_username
  password: !secret shellies_password
  scan_interval: 7200

- platform: rest
  resource: !secret shelly_plug_s_url
  name: 'Shelly Plug S Firmware Version Current'
  value_template: "{{ (value_json['update'].new_version).split('/')[1].split('@')[0] | replace('v', '') }}"
  authentication: basic
  username: !secret shellies_username
  password: !secret shellies_password
  scan_interval: 7200

- platform: nut
  name: 'UPS'
  host: !secret ups_host
  alias: ups
  resources:
    - ups.status
    - ups.load
    - input.voltage
    - battery.voltage
    - battery.charge

- platform: cert_expiry
  host: !secret http_base_url

- platform: command_line
  name: 'Raspberry CPU Temp'
  command: 'cat /sys/class/thermal/thermal_zone0/temp'
  unit_of_measurement: "°C"
  value_template: '{{ (value | multiply(0.001)) | round(1) }}'
  scan_interval: 300

- platform: command_line
  name: 'Last HA restart'
  command: "systemctl status home-assistant.service | head -3 | awk '{print $6}' | tail -1"
  scan_interval: 1800

- platform: command_line
  command: python3 -c "import requests; print(requests.get('https://pypi.org/pypi/homeassistant/json').json()['info']['version'])"
  name: 'HA Version Current'
  scan_interval: 1800

- platform: command_line
  command: python3 -c "import requests; print(requests.get('https://pypi.org/pypi/appdaemon/json').json()['info']['version'])"
  name: 'AD Version Current'
  scan_interval: 1800

- platform: sql
  db_url: !secret mysql_db_url
  queries:
    - name: 'HA Database Size'
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant_db" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: 'MB'

- platform: version
  name: 'HA Version Installed'

- platform: uptime
  name: 'Home Assistant Uptime'
  unit_of_measurement: minutes

- platform: google_travel_time
  name: 'Edyta To Home'
  api_key: !secret google_api_key
  origin: person.edyta
  destination: zone.home

- platform: google_travel_time
  name: 'Maciek To Home'
  api_key: !secret google_api_key
  origin: person.maciek
  destination: zone.home

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

- platform: darksky
  api_key: !secret darksky_api_key
  scan_interval:
    minutes: 15
  language: 'pl'
  forecast:
      - 1
      - 2
      - 3
      - 4
      - 5
  monitored_conditions:
      - icon
      - summary
      - temperature_high
      - temperature_low
      - apparent_temperature
      - wind_speed
      - wind_bearing
      - precip_probability
      - daily_summary
      - visibility

- platform: min_max
  type: mean
  name: 'Temperature Indoor'
  entity_ids:
    - sensor.temperature_kuchnia
    - sensor.temperature_salon
    - sensor.temperature_antresola
    - sensor.temperature_gabinet
    - sensor.temperature_antek
    - sensor.temperature_sypialnia
    - sensor.temperature_lazienka
    - sensor.temperature_goscinny
    - sensor.temperature_pracownia
  round_digits: 1

- platform: min_max
  type: mean
  name: 'Humidity Indoor'
  entity_ids:
    - sensor.humidity_kuchnia
    - sensor.humidity_salon
    - sensor.humidity_antresola
    - sensor.humidity_gabinet
    - sensor.humidity_antek
    - sensor.humidity_sypialnia
    - sensor.humidity_lazienka
    - sensor.humidity_goscinny
    - sensor.humidity_pracownia
  round_digits: 0

- platform: template
  sensors:
    dishwasher_kuchnia:
      friendly_name: 'Zmywarka'
      value_template: >-
        {% if states('sensor.dishwasher_kuchnia_power') | int > 1 %}
          zmywanie
        {% else %}
          wyłączona
        {% endif %}

    light_salon_power_sum:
      friendly_name: 'Oświetlenie salonu'
      unit_of_measurement: 'W'
      value_template: >-
        {{ (states('sensor.light_salon_power') | float +
           states('sensor.lamp_salon_power') | float) | round(1) }}

    airly_info:
      friendly_name: 'Jakość powietrza'
      value_template: >-
        {% if states('sensor.airly_caqi') | int <= 25 %}
          bardzo dobra
        {% elif states('sensor.airly_caqi') | int <= 50 %}
          dobra
        {% elif states('sensor.airly_caqi') | int <= 75 %}
          średnia
        {% elif states('sensor.airly_caqi') | int <= 100 %}
          zła
        {% elif states('sensor.airly_caqi') | int > 100 %}
          bardzo zła
        {% endif %}

    last_boot_custom:
      friendly_name: 'Ostatni restart'
      value_template: "{{ states('sensor.last_boot').split('T')[0] }}"

    humidifier_water_level:
      friendly_name: 'Poziom wody'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('fan.humidifier_salon', 'depth') < 127 %}
          {{ (state_attr('fan.humidifier_salon', 'depth') * 0.89 - 11.6) | round | min(100) | max(0) }}
        {% else %}
          {{ states('sensor.humidifier_water_level') }}
        {% endif %}

    printer_status_custom:
      friendly_name: 'Status'
      value_template: >-
        {% if is_state('sensor.printer_status', 'drukowanie') %}
          drukowanie
        {% elif 'prosz' in states('sensor.printer_status') %}
          nagrzewanie
        {% elif is_state('sensor.printer_status', 'gotowa') %}
          gotowa
        {% elif 'toneru' in states('sensor.printer_status')
             or is_state('sensor.printer_status.state', 'oczekiwanie') %}
          uśpiona
        {% elif 'wymie' in states('sensor.printer_status') %}
          brak toneru
        {% else %}
          {{ states('sensor.printer_status') }}
        {% endif %}

    battery_thermostat_antresola:
      friendly_name: 'antresola'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('zwave.thermostat_antresola', 'battery_level') %}
          {{ state_attr('zwave.thermostat_antresola', 'battery_level') }}
        {% else %}
          {{ states('sensor.battery_thermostat_antresola') }}
        {% endif %}

    battery_thermostat_lazienka:
      friendly_name: 'łazienka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('zwave.thermostat_lazienka', 'battery_level') %}
          {{ state_attr('zwave.thermostat_lazienka', 'battery_level') }}
        {% else %}
          {{ states('sensor.battery_thermostat_lazienka') }}
        {% endif %}

    battery_thermostat_salon:
      friendly_name: 'salon'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('zwave.thermostat_salon', 'battery_level') %}
          {{ state_attr('zwave.thermostat_salon', 'battery_level') }}
        {% else %}
          {{ states('sensor.battery_thermostat_salon') }}
        {% endif %}

    battery_thermostat_kuchnia:
      friendly_name: 'kuchnia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('zwave.thermostat_kuchnia', 'battery_level') %}
          {{ state_attr('zwave.thermostat_kuchnia', 'battery_level') }}
        {% else %}
          {{ states('sensor.battery_thermostat_kuchnia') }}
        {% endif %}

    battery_thermostat_sypialnia:
      friendly_name: 'sypialnia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('zwave.thermostat_sypialnia', 'battery_level') %}
          {{ state_attr('zwave.thermostat_sypialnia', 'battery_level') }}
        {% else %}
          {{ states('sensor.battery_thermostat_sypialnia') }}
        {% endif %}

    battery_thermostat_antek:
      friendly_name: 'pokój Antka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('zwave.thermostat_antek', 'battery_level') %}
          {{ state_attr('zwave.thermostat_antek', 'battery_level') }}
        {% else %}
          {{ states('sensor.battery_thermostat_antek') }}
        {% endif %}

    battery_temp_humi_sensor_outdoor:
      friendly_name: 'zewnętrzny'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_outdoor', 'battery_level') %}
          {{ state_attr('sensor.temperature_outdoor', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_outdoor') }}
        {% endif %}

    battery_temp_humi_sensor_pracownia:
      friendly_name: 'pracownia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_pracownia', 'battery_level') %}
          {{ state_attr('sensor.temperature_pracownia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_pracownia') }}
        {% endif %}

    battery_temp_humi_sensor_antek:
      friendly_name: 'pokój Antka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_antek', 'battery_level') %}
          {{ state_attr('sensor.temperature_antek', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_antek') }}
        {% endif %}

    battery_temp_humi_sensor_salon:
      friendly_name: 'salon'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_salon', 'battery_level') %}
          {{ state_attr('sensor.temperature_salon', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_salon') }}
        {% endif %}

    battery_temp_humi_sensor_goscinny:
      friendly_name: 'pokój gościnny'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_goscinny', 'battery_level') %}
          {{ state_attr('sensor.temperature_goscinny', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_goscinny') }}
        {% endif %}

    battery_temp_humi_sensor_sypialnia:
      friendly_name: 'sypialnia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_sypialnia', 'battery_level') %}
          {{ state_attr('sensor.temperature_sypialnia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_sypialnia') }}
        {% endif %}

    battery_temp_humi_sensor_lazienka:
      friendly_name: 'łazienka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_lazienka', 'battery_level') %}
          {{ state_attr('sensor.temperature_lazienka', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_lazienka') }}
        {% endif %}

    battery_temp_humi_sensor_antresola:
      friendly_name: 'antresola'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_antresola', 'battery_level') %}
          {{ state_attr('sensor.temperature_antresola', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_antresola') }}
        {% endif %}

    battery_temp_humi_sensor_gabinet:
      friendly_name: 'gabinet'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('sensor.temperature_gabinet', 'battery_level') %}
          {{ state_attr('sensor.temperature_gabinet', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_temp_humi_sensor_gabinet') }}
        {% endif %}

    battery_motion_sensor_antresola:
      friendly_name: 'antresola'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_antresola_1', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_antresola_1', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_atresola') }}
        {% endif %}

    battery_motion_sensor_przedpokoj:
      friendly_name: 'przedpokój'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_przedpokoj', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_przedpokoj', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_przedpokoj') }}
        {% endif %}

    battery_motion_sensor_pracownia:
      friendly_name: 'pracownia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_pracownia', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_pracownia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_pracownia') }}
        {% endif %}

    battery_motion_sensor_schody:
      friendly_name: 'schody'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_antresola_2', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_antresola_2', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_schody') }}
        {% endif %}

    battery_motion_sensor_salon_1:
      friendly_name: 'salon [1]'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_salon_1', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_salon_1', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_salon_1') }}
        {% endif %}

    battery_motion_sensor_sypialnia:
      friendly_name: 'sypialnia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_sypialnia', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_sypialnia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_sypialnia') }}
        {% endif %}

    battery_motion_sensor_antek:
      friendly_name: 'pokój Antka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_antek', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_antek', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_antek') }}
        {% endif %}

    battery_motion_sensor_goscinny:
      friendly_name: 'pokój gościnny'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_goscinny', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_goscinny', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_goscinny') }}
        {% endif %}

    battery_motion_sensor_gabinet:
      friendly_name: 'gabinet'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_gabinet', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_gabinet', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_gabinet') }}
        {% endif %}

    battery_motion_sensor_salon_2:
      friendly_name: 'salon [2]'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.motion_salon_2', 'battery_level') %}
          {{ state_attr('binary_sensor.motion_salon_2', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_motion_sensor_salon_2') }}
        {% endif %}

    battery_switch_light_salon_1:
      friendly_name: 'salon [1]'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.switch_light_salon_1', 'battery_level') %}
          {{ state_attr('binary_sensor.switch_light_salon_1', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_switch_light_salon_1') }}
        {% endif %}

    battery_switch_light_salon_2:
      friendly_name: 'salon [2]'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.switch_light_salon_2', 'battery_level') %}
          {{ state_attr('binary_sensor.switch_light_salon_2', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_switch_light_salon_2') }}
        {% endif %}

    battery_switch_light_antek:
      friendly_name: 'pokój Antka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.switch_light_antek', 'battery_level') %}
          {{ state_attr('binary_sensor.switch_light_antek', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_switch_light_antek') }}
        {% endif %}

    battery_window_sensor_kuchnia:
      friendly_name: 'kuchnia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.window_kuchnia', 'battery_level') %}
          {{ state_attr('binary_sensor.window_kuchnia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_window_sensor_kuchnia') }}
        {% endif %}

    battery_window_sensor_antek:
      friendly_name: 'pokój Antka'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.window_antek', 'battery_level') %}
          {{ state_attr('binary_sensor.window_antek', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_window_sensor_antek') }}
        {% endif %}

    battery_window_sensor_antresola:
      friendly_name: 'antresola'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.window_antresola', 'battery_level') %}
          {{ state_attr('binary_sensor.window_antresola', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_window_sensor_antresola') }}
        {% endif %}

    battery_door_sensor_sypialnia:
      friendly_name: 'sypialnia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.balcony_door_sypialnia', 'battery_level') %}
          {{ state_attr('binary_sensor.balcony_door_sypialnia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_door_sensor_sypialnia') }}
        {% endif %}

    battery_door_sensor_pracownia:
      friendly_name: 'pracownia'
      unit_of_measurement: '%'
      value_template: >-
        {% if state_attr('binary_sensor.balcony_door_pracownia', 'battery_level') %}
          {{ state_attr('binary_sensor.balcony_door_pracownia', 'battery_level') | round }}
        {% else %}
          {{ states('sensor.battery_door_sensor_pracownia') }}
        {% endif %}

    ups_status:
      friendly_name: 'Status'
      value_template: >-
        {% if is_state('sensor.ups_status_data', 'OL') %}
          zasilanie sieciowe
        {% elif is_state('sensor.ups_status_data', 'OL CHRG') %}
          ładowanie baterii
        {% elif is_state('sensor.ups_status_data', 'OB DISCHRG') %}
          zasilanie bateryjne
        {% elif is_state('sensor.ups_status_data', 'LB') %}
          słaba bateria
        {% elif is_state('sensor.ups_status_data', 'SD') %}
          wyłączanie
        {% else %}
          {{ states('sensor.ups_status_data') }}
        {% endif %}
